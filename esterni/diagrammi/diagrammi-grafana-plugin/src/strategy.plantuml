@startuml

interface Props{
    + predictor: Predictor

}

interface Strategy{
    + Predict(GrafanaData, Predictor, any): number[][]
}


class PredictionRL implements Strategy{
    + const coefficients: number[]
    + const base: number
    + predict(GrafanaData, Predictor, parameter): number [][]
    + const f (number): number
  
}

class PredictionSVM implements Strategy{
    + predict(GrafanaData, Predictor, parameter): number[][]
    + coefficients:number[]
    + base: number
    + f(number): number
}


class ConfigRL implements Props {
    + render() : JSX.Element
    - queryNames()
    - queryAssociation()
    - showQueryAssociation(ChangeEvent<HTMLSelectElement>)
}

class ConfigSVM implements Props {
     + render() : JSX.Element
    - queryNames()
    - queryAssociation()
    - showQueryAssociation(ChangeEvent<HTMLSelectElement>)
}


PredictionRL-->ConfigRL
PredictionSVM-->ConfigSVM

@enduml